      SUBROUTINE GRIB2OUT(NLDAS,LDASMASK,HOUR,YESTERDAY,
     &        TODAY,TAIR,SPFH,PRES,UWIND,VWIND,DLWRF,FRAIN,CAPE,
     &        CONVPREC,PREC,DSWRF)

C***********************************************************************
C  PROGRAM:  GRIBLDAS           WRITE LDAS OUTPUT IN GRIB FORMAT
C  PRGMMR:  MARSHALL & LOHMANN  ORG:  W/NP20
C
C  ABSTRACT:  TAKES HOURLY OUTPUT FILES FROM LDAS MODELS (IN BINARY
C             FORMAT - BIG ENDIAN) AND MAKES GRIB RECORDS FOR ALL FIELDS
C             IN THE FILE.  NOTE ORDER OF FIELDS IN EACH BINARY FILE
C             MUST CORRESPOND TO ORDER OF FIELDS IN KPDS.tbl.  TIME
C             STAMP INFORMATION MUST ALSO APPEAR (YYYYMMDDHH) IN THE
C             TITLE OF EACH BINARY HOURLY OUTPUT FILE.  THIS INFO IS
C             USED IN CONSTRUCTING THE TIME-RELATED PDS OCTETS WHICH
C             DO NOT APPEAR IN KPDS.tbl   
C
C  PROGRAM HISTORY LOG:
C  00-10-15 MARSHALL ORIGINAL TEMPLATE FOR NOAH MODEL
C  00-11-01 LOHMANN  FINALIZED AND CHANGED TO SUBROUTINE
C  01-06-02 LOHMANN  ADDED OUTPUT VARIABLES FOR LDAS
C  13-09-25 YOULONG XIA REVISED for GRIB2 OUTPUT
C  16-03-17 YOULONG XIA REVISED FOR FORCING OUTPUT WHEN NAMRR/NAM DATA
C           ARE USED
C***********************************************************************

      IMPLICIT NONE

      CHARACTER*8 YESTERDAY, TODAY

      LOGICAL*1   LDASMASK(NLDAS)

      REAL    TAIR(NLDAS) 
      REAL    SPFH(NLDAS)
      REAL    PRES(NLDAS) 
      REAL    UWIND(NLDAS) 
      REAL    VWIND(NLDAS)
      REAL    DLWRF(NLDAS)
      REAL    FRAIN(NLDAS)
      REAL    CAPE(NLDAS)
      REAL    CONVPREC(NLDAS)
      REAL    PREC(NLDAS)
      REAL    DSWRF(NLDAS)
      
      REAL    DUMMY(NLDAS)

      INTEGER IPTABLE(13)
      INTEGER HOUR,HOUR1
      INTEGER LUGB, I, J, K, N, IRET, JRET, NLDAS, IG, NFIELDS

      CHARACTER CENT*2, CHOUR*2, GRIBFILE*256
      CHARACTER*19 VANAM 

C     read past header info in KPDS.force.ndas_nam.grib2.tbl
      DO K = 1, 42
         READ(70,*)
      END DO
      
C     MAKE OUTPUT FILENAME
      IF(HOUR.LE.11)THEN
      HOUR1=HOUR+12
      WRITE (CHOUR, '(i2.2)') HOUR1
      GRIBFILE = YESTERDAY//CHOUR//'.forcing.grb2'//char(0)
      ELSE
      HOUR1=HOUR-12
      WRITE (CHOUR, '(i2.2)') HOUR1
      GRIBFILE = TODAY//CHOUR//'.forcing.grb2'//char(0)
      ENDIF

C     OPEN GRIB FILE

      LUGB = 40
      CALL BAOPEN(LUGB, GRIBFILE, IRET)    

C     WRITE EACH FIELD (IN GRIB) TO HOURLY OUTPUT
       
      READ (70,*) VANAM, (IPTABLE(I),I=1,13)
      CALL grib2_wrt_g2func(LDASMASK,HOUR1,YESTERDAY,TODAY,
     +     TAIR,IPTABLE,LUGB,IRET) 
      IF (IRET .NE. 0) THEN
         PRINT*, 'PUTGB FAILED FOR HOUR = ',HOUR,',','FIELD = TAIR'
         STOP
      END IF
      
      READ (70,*) VANAM, (IPTABLE(I),I=1,13)
      CALL grib2_wrt_g2func(LDASMASK,HOUR1,YESTERDAY,TODAY,
     +     SPFH,IPTABLE,LUGB,IRET)
      IF (IRET .NE. 0) THEN
         PRINT*, 'PUTGB FAILED FOR HOUR = ',HOUR,',','FIELD = SPFH'
         STOP
      ENDIF

      READ (70,*) VANAM, (IPTABLE(I),I=1,13)
      CALL grib2_wrt_g2func(LDASMASK,HOUR1,YESTERDAY,TODAY,
     +     PRES,IPTABLE,LUGB,IRET)
      IF (IRET .NE. 0) THEN
         PRINT*, 'PUTGB FAILED FOR HOUR = ',HOUR,',','FIELD = PRES'
         STOP
      END IF

      READ (70,*) VANAM, (IPTABLE(I),I=1,13)
      CALL grib2_wrt_g2func(LDASMASK,HOUR1,YESTERDAY,TODAY,
     +     UWIND,IPTABLE,LUGB,IRET)
      IF (IRET .NE. 0) THEN
         PRINT*, 'PUTGB FAILED FOR HOUR = ',HOUR,',','FIELD = UWIND'
         STOP
      END IF

      READ (70,*) VANAM, (IPTABLE(I),I=1,13)
      CALL grib2_wrt_g2func(LDASMASK,HOUR1,YESTERDAY,TODAY,
     +     VWIND,IPTABLE,LUGB,IRET)
      IF (IRET .NE. 0) THEN
         PRINT*, 'PUTGB FAILED FOR HOUR = ',HOUR,',','FIELD = VWIND'
         STOP
      END IF

      READ (70,*) VANAM, (IPTABLE(I),I=1,13)
      CALL grib2_wrt_g2func(LDASMASK,HOUR1,YESTERDAY,TODAY,
     +     DLWRF,IPTABLE,LUGB,IRET)
      IF (IRET .NE. 0) THEN
         PRINT*, 'PUTGB FAILED FOR HOUR = ',HOUR,',','FIELD = DLWRF'
         STOP
      END IF

       READ (70,*) VANAM, (IPTABLE(I),I=1,13)
       CALL grib2_wrt_g2func(LDASMASK,HOUR1,YESTERDAY,TODAY,
     +     FRAIN,IPTABLE,LUGB,IRET)
      IF (IRET .NE. 0) THEN
         PRINT*, 'PUTGB FAILED FOR HOUR = ',HOUR,',','FIELD = FRAIN'
         STOP
      END IF

       READ (70,*) VANAM, (IPTABLE(I),I=1,13)
       CALL grib2_wrt_g2func(LDASMASK,HOUR1,YESTERDAY,TODAY,
     +     CAPE,IPTABLE,LUGB,IRET)
      IF (IRET .NE. 0) THEN
         PRINT*, 'PUTGB FAILED FOR HOUR = ',HOUR,',','FIELD = CAPE'
         STOP
      END IF

      READ (70,*) VANAM, (IPTABLE(I),I=1,13)
      CALL grib2_wrt_g2func(LDASMASK,HOUR1,YESTERDAY,TODAY,
     +     CONVPREC,IPTABLE,LUGB,IRET)
      IF (IRET .NE. 0) THEN
         PRINT*, 'PUTGB FAILED FOR HOUR = ',HOUR,',','FIELD = CONVPREC'
         STOP
      END IF

      READ (70,*) VANAM, (IPTABLE(I),I=1,13)
      CALL grib2_wrt_g2func(LDASMASK,HOUR1,YESTERDAY,TODAY,
     +     PREC,IPTABLE,LUGB,IRET)
      IF (IRET .NE. 0) THEN
         PRINT*, 'PUTGB FAILED FOR HOUR = ',HOUR,',','FIELD = PREC'
         STOP
      END IF

      READ (70,*) VANAM, (IPTABLE(I),I=1,13)
      CALL grib2_wrt_g2func(LDASMASK,HOUR1,YESTERDAY,TODAY,
     +     DSWRF,IPTABLE,LUGB,IRET)
      IF (IRET .NE. 0) THEN
         PRINT*, 'PUTGB FAILED FOR HOUR = ',HOUR,',','FIELD = DSWRF'
         STOP
      END IF

C     ------------------------ close grib file-----------------------
      CALL BACLOSE (LUGB, JRET)
      CLOSE (70)
      END
